{"filter":false,"title":"views.py","tooltip":"/storyteller_app/views.py","undoManager":{"mark":22,"position":22,"stack":[[{"start":{"row":6,"column":36},"end":{"row":6,"column":37},"action":"remove","lines":["r"],"id":2}],[{"start":{"row":6,"column":35},"end":{"row":6,"column":36},"action":"remove","lines":["e"],"id":3}],[{"start":{"row":6,"column":34},"end":{"row":6,"column":35},"action":"remove","lines":["s"],"id":4}],[{"start":{"row":6,"column":33},"end":{"row":6,"column":34},"action":"remove","lines":["U"],"id":5}],[{"start":{"row":6,"column":32},"end":{"row":6,"column":33},"action":"remove","lines":[" "],"id":6}],[{"start":{"row":6,"column":31},"end":{"row":6,"column":32},"action":"remove","lines":[","],"id":7}],[{"start":{"row":259,"column":0},"end":{"row":282,"column":0},"action":"remove","lines":["def adduser(request):","    if request.method == 'POST':","        ","        django_form = userForm(request.POST)","        if django_form.is_valid():","            ","            new_name = django_form.data.get(\"name\")","            new_account = django_form.data.get(\"account\")","            new_password = django_form.data.get(\"password\")","            ","            User.objects.create(","                name = new_name,","                account = new_account,","                password = new_password,","            )","","            return HttpResponseRedirect(\"/\")","        ","        else:","            return HttpResponseRedirect(\"/\")","    ","    else:","        return HttpResponseRedirect(\"/\")",""],"id":8}],[{"start":{"row":258,"column":2},"end":{"row":259,"column":0},"action":"remove","lines":["",""],"id":9}],[{"start":{"row":258,"column":1},"end":{"row":258,"column":2},"action":"remove","lines":[" "],"id":10}],[{"start":{"row":258,"column":0},"end":{"row":258,"column":1},"action":"remove","lines":[" "],"id":11}],[{"start":{"row":257,"column":2},"end":{"row":258,"column":0},"action":"remove","lines":["",""],"id":12}],[{"start":{"row":257,"column":1},"end":{"row":257,"column":2},"action":"remove","lines":[" "],"id":13}],[{"start":{"row":5,"column":45},"end":{"row":5,"column":46},"action":"remove","lines":["m"],"id":14}],[{"start":{"row":5,"column":44},"end":{"row":5,"column":45},"action":"remove","lines":["r"],"id":15}],[{"start":{"row":5,"column":43},"end":{"row":5,"column":44},"action":"remove","lines":["o"],"id":16}],[{"start":{"row":5,"column":42},"end":{"row":5,"column":43},"action":"remove","lines":["F"],"id":17}],[{"start":{"row":5,"column":41},"end":{"row":5,"column":42},"action":"remove","lines":["r"],"id":18}],[{"start":{"row":5,"column":40},"end":{"row":5,"column":41},"action":"remove","lines":["e"],"id":19}],[{"start":{"row":5,"column":39},"end":{"row":5,"column":40},"action":"remove","lines":["s"],"id":20}],[{"start":{"row":5,"column":38},"end":{"row":5,"column":39},"action":"remove","lines":["u"],"id":21}],[{"start":{"row":5,"column":37},"end":{"row":5,"column":38},"action":"remove","lines":[" "],"id":22}],[{"start":{"row":5,"column":36},"end":{"row":5,"column":37},"action":"remove","lines":[","],"id":23}],[{"start":{"row":0,"column":0},"end":{"row":260,"column":1},"action":"remove","lines":["from django.shortcuts import render","from django.shortcuts import render_to_response","from django.shortcuts import redirect","from django.core.urlresolvers import reverse","# Create your views here.","from .forms import AddForm, AddForm2","from .models import Story, Post","from django.http import HttpResponseRedirect","from time import localtime,strftime","from django.db.models import F","from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger","","#global","","    ","        ","def story(request, pk):","    ","    check_pk = pk","    ","    if request.method == 'POST':","        ","        django_form = AddForm(request.POST)","        if django_form.is_valid():","            new_context = django_form.data.get(\"context\")","            ","            Story.objects.create(","                context =  new_context, ","                auther = \"auther\",","                time = strftime(\"%Y %b %d %X\",localtime()),","                post_id = check_pk,","                likes = 0,","                )","                ","            ","            ","            #url = reverse('story', kwargs={'story': check_pk})","            #return HttpResponseRedirect(url)","            #return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})","            try:","                intopk = Story.objects.get(pk=check_pk)","            except Story.DoesNotExist:","                intopk = Story.objects.order_by('-pk')[0]","            ","            return HttpResponseRedirect(\"story\",intopk.pk)","            #story_list = Story.objects.filter(post_id=check_pk).all()","            #post_story = Post.objects.get(pk=check_pk)","            #return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})","        ","        else:","            #return HttpResponseRedirect(request, 'mycontacts/show.html',{'story': story_list})   ","            #url = reverse('story', kwargs={'story': check_pk})","            #return HttpResponseRedirect(url)","            story_list = Story.objects.filter(post_id=check_pk).all()","            post_story = Post.objects.get(pk=check_pk)","            return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})","    ","    else:","        story_list = Story.objects.filter(post_id=check_pk).all()","        post_story = Post.objects.get(pk=check_pk)","        ","        return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})","        "," "," "," "," "," "," "," ","        ","def likes(request, pk):","    ","    temp_pk = pk","    ","    Story.objects.filter(pk=temp_pk).update(likes = F('likes')+1)","    intopk = Story.objects.get(pk=temp_pk)","    ","    return redirect(\"story\",intopk.post_id)","    ","    ","    ","    ","    ","    ","    ","def collection_e(request):","    ","    post_list  = Post.objects.all()","    ","    contact_list = Post.objects.all()","    paginator = Paginator(contact_list, 9) # Show 25 contacts per page","","    page = request.GET.get('page')","    ","    try:","        contacts = paginator.page(page)    ","    except PageNotAnInteger:","        # If page is not an integer, deliver first page.","        contacts = paginator.page(1)","    except EmptyPage:","        # If page is out of range (e.g. 9999), deliver last page of results.","        contacts = paginator.page(paginator.num_pages)","","    return render(request, 'storyteller_app/collection_e.html', {'contacts': contacts})","    ","def collection_f(request):","    ","    return render(request,'storyteller_app/collection_f.html')","    ","    ","    ","    ","    ","    ","    ","    ","def addpost(request):","    ","    post_list  = Post.objects.all()","","    if request.method == 'POST':","        ","        django_form = AddForm2(request.POST)","        if django_form.is_valid():","            new_title = django_form.data.get(\"new-title\")","            first_sentence = django_form.data.get(\"first-sentence\")","            ","            Post.objects.create(","                storyTitle = new_title,","                created_at = strftime(\"%Y %b %d\",localtime()),","                created_day = strftime(\"%d\",localtime()),","                created_mon = strftime(\"%b\",localtime()),","                post_likes = 0,","                firstSentence = first_sentence,","            )","            ","            intopk = Post.objects.get(storyTitle=new_title)","            ","            Story.objects.create(","                context =  first_sentence, ","                auther = \"auther\",","                time = strftime(\"%Y %b %d %X\",localtime()),","                post_id = intopk.pk,","                likes = 0,","                )","            ","","            return redirect(\"story\",intopk.pk)","        ","        else:","            post_list  = Post.objects.all()","            return render(request,'storyteller_app/collection_e.html',{'post': post_list})","    ","    else:","        post_list  = Post.objects.all()","        return render(request,'storyteller_app/collection_e.html',{'post': post_list})","","","","","","","","","def index(request):","    return render(request,'storyteller_app/index.html')"," "," "," "," "," "," "," ","    ","","def post_likes(request, pk):","    ","    temp_pk = pk","    Post.objects.filter(pk=temp_pk).update(post_likes = F('post_likes')+1)","    contact_list = Post.objects.all()","    paginator = Paginator(contact_list, 9) # Show 25 contacts per page","    page = request.GET.get('page')","","    try:","        contacts = paginator.page(page)","    except PageNotAnInteger:","        # If page is not an integer, deliver first pag.","        contacts = paginator.page(1)","    except EmptyPage:","        # If page is out of range (e.g. 9999), deliver last page of results.","        contacts = paginator.page(paginator.num_pages)","","    return render(request, 'storyteller_app/collection_e.html', {'contacts': contacts})","    ","    ","   ","   ","def in_post_likes(request, pk):","    ","    temp_pk = pk","    ","    Post.objects.filter(pk=temp_pk).update(post_likes = F('post_likes')+1)","    ","    #return redirect(\"story\",intopk.post_id)","    story_list = Story.objects.filter(post_id=temp_pk).all()","    post_story = Post.objects.get(pk=temp_pk)","    ","        ","    return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})"," "," "," ","    ","    ","def hot_sort(request):","    ","    ","    contact_list = Post.objects.all().order_by('-post_likes')","    paginator = Paginator(contact_list, 9) # Show 25 contacts per page","","    page = request.GET.get('page')","    try:","        contacts = paginator.page(page)","    except PageNotAnInteger:","        # If page is not an integer, deliver first page.","        contacts = paginator.page(1)","    except EmptyPage:","        # If page is out of range (e.g. 9999), deliver last page of results.","        contacts = paginator.page(paginator.num_pages)","","    return render(request, 'storyteller_app/collection_e.html', {'contacts': contacts})","","","    ","    ","    ","    ","    ","def new_sort(request):","    ","    contact_list = Post.objects.all().order_by('-pk')","    paginator = Paginator(contact_list, 9) # Show 25 contacts per page","","    page = request.GET.get('page')","    try:","        contacts = paginator.page(page)","    except PageNotAnInteger:","        # If page is not an integer, deliver first page.","        contacts = paginator.page(1)","    except EmptyPage:","        # If page is out of range (e.g. 9999), deliver last page of results.","        contacts = paginator.page(paginator.num_pages)","","    return render(request, 'storyteller_app/collection_e.html', {'contacts': contacts})","  ","  "," ","    ",""," "],"id":24},{"start":{"row":0,"column":0},"end":{"row":301,"column":1},"action":"insert","lines":["from django.shortcuts import render","from django.shortcuts import render_to_response","from django.shortcuts import redirect","from django.core.urlresolvers import reverse","# Create your views here.","from .forms import AddForm, AddForm2, RegistrationForm, User","from .models import Story, Post","from django.http import HttpResponseRedirect","from time import localtime,strftime","from django.db.models import F","from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger","","from django.contrib.auth.decorators import login_required","from django.views.decorators.csrf import csrf_protect","from django.template import RequestContext","from django.contrib.auth import logout","","#global","","    ","        ","def story(request, pk):","    ","    check_pk = pk","    ","    if request.method == 'POST':","        ","        django_form = AddForm(request.POST)","        if django_form.is_valid():","            new_context = django_form.data.get(\"context\")","            ","            Story.objects.create(","                context =  new_context, ","                auther = \"auther\",","                time = strftime(\"%Y %b %d %X\",localtime()),","                post_id = check_pk,","                likes = 0,","                )","                ","            ","            ","            #url = reverse('story', kwargs={'story': check_pk})","            #return HttpResponseRedirect(url)","            #return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})","            try:","                intopk = Story.objects.get(pk=check_pk)","            except Story.DoesNotExist:","                intopk = Story.objects.order_by('-pk')[0]","            ","            return HttpResponseRedirect(\"story\",intopk.pk)","            #story_list = Story.objects.filter(post_id=check_pk).all()","            #post_story = Post.objects.get(pk=check_pk)","            #return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})","        ","        else:","            #return HttpResponseRedirect(request, 'mycontacts/show.html',{'story': story_list})   ","            #url = reverse('story', kwargs={'story': check_pk})","            #return HttpResponseRedirect(url)","            story_list = Story.objects.filter(post_id=check_pk).all()","            post_story = Post.objects.get(pk=check_pk)","            return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})","    ","    else:","        story_list = Story.objects.filter(post_id=check_pk).all()","        post_story = Post.objects.get(pk=check_pk)","        ","        return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})","        "," "," "," "," "," "," "," ","        ","def likes(request, pk):","    ","    temp_pk = pk","    ","    Story.objects.filter(pk=temp_pk).update(likes = F('likes')+1)","    intopk = Story.objects.get(pk=temp_pk)","    ","    return redirect(\"story\",intopk.post_id)","    ","    ","    ","    ","    ","    ","    ","def collection_e(request):","    ","    post_list  = Post.objects.all()","    ","    contact_list = Post.objects.all()","    paginator = Paginator(contact_list, 9) # Show 25 contacts per page","","    page = request.GET.get('page')","    ","    try:","        contacts = paginator.page(page)    ","    except PageNotAnInteger:","        # If page is not an integer, deliver first page.","        contacts = paginator.page(1)","    except EmptyPage:","        # If page is out of range (e.g. 9999), deliver last page of results.","        contacts = paginator.page(paginator.num_pages)","","    return render(request, 'storyteller_app/collection_e.html', {'contacts': contacts})","    ","def collection_f(request):","    ","    return render(request,'storyteller_app/collection_f.html')","    ","    ","    ","    ","    ","    ","    ","    ","def addpost(request):","    ","    post_list  = Post.objects.all()","","    if request.method == 'POST':","        ","        django_form = AddForm2(request.POST)","        if django_form.is_valid():","            new_title = django_form.data.get(\"new-title\")","            first_sentence = django_form.data.get(\"first-sentence\")","            ","            Post.objects.create(","                storyTitle = new_title,","                created_at = strftime(\"%Y %b %d\",localtime()),","                created_day = strftime(\"%d\",localtime()),","                created_mon = strftime(\"%b\",localtime()),","                post_likes = 0,","                firstSentence = first_sentence,","            )","            ","            intopk = Post.objects.get(storyTitle=new_title)","            ","            Story.objects.create(","                context =  first_sentence, ","                auther = \"auther\",","                time = strftime(\"%Y %b %d %X\",localtime()),","                post_id = intopk.pk,","                likes = 0,","                )","            ","","            return redirect(\"story\",intopk.pk)","        ","        else:","            post_list  = Post.objects.all()","            return render(request,'storyteller_app/collection_e.html',{'post': post_list})","    ","    else:","        post_list  = Post.objects.all()","        return render(request,'storyteller_app/collection_e.html',{'post': post_list})","","","","","","","","","def index(request):","    return render(request,'storyteller_app/index.html')"," "," "," "," "," "," "," ","    ","","def post_likes(request, pk):","    ","    temp_pk = pk","    Post.objects.filter(pk=temp_pk).update(post_likes = F('post_likes')+1)","    contact_list = Post.objects.all()","    paginator = Paginator(contact_list, 9) # Show 25 contacts per page","    page = request.GET.get('page')","","    try:","        contacts = paginator.page(page)","    except PageNotAnInteger:","        # If page is not an integer, deliver first pag.","        contacts = paginator.page(1)","    except EmptyPage:","        # If page is out of range (e.g. 9999), deliver last page of results.","        contacts = paginator.page(paginator.num_pages)","","    return render(request, 'storyteller_app/collection_e.html', {'contacts': contacts})","    ","    ","   ","   ","def in_post_likes(request, pk):","    ","    temp_pk = pk","    ","    Post.objects.filter(pk=temp_pk).update(post_likes = F('post_likes')+1)","    ","    #return redirect(\"story\",intopk.post_id)","    story_list = Story.objects.filter(post_id=temp_pk).all()","    post_story = Post.objects.get(pk=temp_pk)","    ","        ","    return render(request, 'storyteller_app/story.html',{'story': story_list, 'post': post_story})"," "," "," ","    ","    ","def hot_sort(request):","    ","    ","    contact_list = Post.objects.all().order_by('-post_likes')","    paginator = Paginator(contact_list, 9) # Show 25 contacts per page","","    page = request.GET.get('page')","    try:","        contacts = paginator.page(page)","    except PageNotAnInteger:","        # If page is not an integer, deliver first page.","        contacts = paginator.page(1)","    except EmptyPage:","        # If page is out of range (e.g. 9999), deliver last page of results.","        contacts = paginator.page(paginator.num_pages)","","    return render(request, 'storyteller_app/collection_e.html', {'contacts': contacts})","","","    ","    ","    ","    ","    ","def new_sort(request):","    ","    contact_list = Post.objects.all().order_by('-pk')","    paginator = Paginator(contact_list, 9) # Show 25 contacts per page","","    page = request.GET.get('page')","    try:","        contacts = paginator.page(page)","    except PageNotAnInteger:","        # If page is not an integer, deliver first page.","        contacts = paginator.page(1)","    except EmptyPage:","        # If page is out of range (e.g. 9999), deliver last page of results.","        contacts = paginator.page(paginator.num_pages)","","    return render(request, 'storyteller_app/collection_e.html', {'contacts': contacts})","    ","    ","    ","    ","@login_required","def personal(request):","    return render(request,'storyteller_app/personal.html')","    ","    ","def login(request):","    return render_to_response('registration/login.html',)      ","","","@csrf_protect","def register(request):","    if request.method == 'POST':","        form = RegistrationForm(request.POST)","        if form.is_valid():","            user = User.objects.create_user(","            username=form.cleaned_data['username'],","            password=form.cleaned_data['password1'],","            email=form.cleaned_data['email']","            )","            return HttpResponseRedirect('/register/success/')","    else:","        form = RegistrationForm()","    variables = RequestContext(request, {'form': form })"," ","    return render_to_response('registration/register.html', variables,)"," ","def register_success(request):","    return render_to_response('registration/success.html',)"," ","def logout_page(request):","    logout(request)","    return HttpResponseRedirect('/')","  ","  "," ","    ",""," "]}]]},"ace":{"folds":[],"scrolltop":2936.800172805786,"scrollleft":0,"selection":{"start":{"row":290,"column":30},"end":{"row":290,"column":30},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1482414062920,"hash":"24a31093bbc4a8c2767b4824efc76849f2590751"}